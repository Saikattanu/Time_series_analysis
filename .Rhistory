data ("AirPassengers")
print ("AirPassengers'")
library(tseries)
data=ts.plot(x)
data ("AirPassengers")
print ("AirPassengers")
library(tseries)
data=ts.plot(x)
data ("AirPassengers")
print ("AirPassengers")
library(tseries)
data=ts.plot(x)
acf(AirPassengers)
pacf(AirPassengers)
adf.test(AirPassengers)
acf(AirPassengers)
pacf(AirPassengers)
adf.test(AirPassengers)
version
R.version.string
data ("AirPassengers")
print ("AirPassengers")
library(tseries)
data=ts.plot(x)
acf(AirPassengers)
pacf(AirPassengers)
adf.test(AirPassengers)
data ("tute1")
print ("tute1")
library(tseries)
data=ts.plot(x)
acf(tute1)
pacf(tute1)
library(readr)
tute1 <- read_csv("tute1.csv")
tute1 <- read.csv("tute1.csv", header=TRUE)
View(tute1)
library(readr)
install.packages("readr")
library(readr)
tute1 <- read_csv("tute1.csv")
read_csv("tute1.csv")
library(readr)
read_csv("tute1.csv")
read_csv("tute1.csv")
print(tute1)
print("tute1.csv")
library(tseries)
library(forecast)
install.packages("forecast")
library(tseries)
library(forecast)
ts.plot(tute1)
library(forecast)
data=ts.plot(tute1)
data ("AirPassengers")
print ("AirPassengers")
library(tseries)
data=ts.plot(x)
acf(AirPassengers)
pacf(AirPassengers)
adf.test(AirPassengers)
library(readr)
read_csv("tute1.csv")
print("tute1.csv")
library(tseries)
library(forecast)
data=ts.plot(tute1)
acf(tute1)
pacf(tute1)
library(forecast)
data=ts.plot(tute1)
data=ts.plot(tute1_ts)
library(readr)
read_csv("tute1.csv")
print("tute1.csv")
library(tseries)
library(forecast)
ts.plot(tute1_ts)
ts.plot(tute1)
data=ts.plot(tute1)
library(readr)
read_csv("tute1.csv")
print(head(tute1))
print("tute1.csv")
library(tseries)
library(forecast)
data=ts.plot(tute1)
tute1 <- read.csv("tute1.csv", header=TRUE)
View(tute1)
mytimeseries <- ts(tute1[,-1], start=1981, frequency=4)
autoplot(mytimeseries, facets=TRUE)
library(fpp2)
oildata <- window(oil, start=1996)
autoplot(oildata) +
ylab("Oil (millions of tonnes)") + xlab("Year")
#ARIMA lect 8
setwd("C:\Users\ASUS\Downloads\Inflation.csv)
ts_data <- ts(data$Inflation.Rate, start = 1991 , frequency = 1)
library(ggplot2)
#ARIMA lect 8
setwd("C:\Users\ASUS\Downloads\Inflation.csv)
setwd("C:\Users\ASUS\Downloads\Inflation.csv)
#ARIMA lect 8
setwd("C:\Users\ASUS\Downloads\Inflation.csv)
# Set working directory (ensure this is the directory containing the CSV file)
setwd("C:/Users/ASUS/Downloads")
# Read the data from the CSV file
data <- read.csv("Inflation.csv")
# Create a time series object
ts_data <- ts(data$Inflation.Rate, start = 1991, frequency = 1)
# Load required libraries
library(ggplot2)
library(fpp2)
# Reinstall the required packages
install.packages("fpp2")
install.packages("fpp2")
install.packages("forecast")
install.packages("fma")
install.packages("expsmooth")
# Load the libraries again
library(ggplot2)
# Reinstall the ggplot2 package
install.packages("ggplot2")
install.packages("ggplot2")
# Load the library again
library(ggplot2)
# Load the libraries again
library(ggplot2)
library(fpp2)
library(tseries)
install.packages("tseries")
library(tseries)
library(forecast)
install.packages("forecast")
library(forecast)
library(zoo)
library(lmtest)
# Set working directory (ensure this is the directory containing the CSV file)
setwd("C:/Users/ASUS/Downloads")
# Read the data from the CSV file
data <- read.csv("Inflation.csv")
# Create a time series object
ts_data <- ts(data$Inflation.Rate, start = 1991, frequency = 1)
# Load required libraries
library(ggplot2)
library(fpp2)
library(tseries)
library(forecast)
library(zoo)
library(lmtest)
# Display the time series data
ggtsdisplay(ts_data)
autoplot(ts_data)
ggAcf(ts_data)
ggPacf(ts_data)
adf.test(ts_data)
# Differencing the time series data
diff1 <- diff(ts_data)
adf.test(diff1)
ggtsdisplay(diff1)
diff2 <- diff(diff1)
adf.test(diff2)
ggtsdisplay(diff2)
# Fit the ARIMA model
fitdata <- Arima(diff2, order = c(2, 2, 0))
coeftest(fitdata)
summary(fitdata)
checkresiduals(fitdata)
# Forecasting
fc <- forecast(fitdata, h = 10)
print(fc)
plot(fc)
# Create a time series object
ts_data <- ts(data$Inflation.Rate, start = 1991, frequency = 1)
# Display the time series data
ggtsdisplay(ts_data)
autoplot(ts_data)
ggAcf(ts_data)
ggPacf(ts_data)
adf.test(ts_data)
# Differencing the time series data if necessary
diff_ts_data <- diff(ts_data)
adf.test(diff_ts_data)
ggtsdisplay(diff_ts_data)
# Fit an ARMA model to the differenced time series data
arma_fit <- Arima(diff_ts_data, order = c(2, 0, 2))
summary(arma_fit)
checkresiduals(arma_fit)
# Forecasting with the fitted ARMA model
fc_arma <- forecast(arma_fit, h = 10)
print(fc_arma)
plot(fc_arma)
plot(fc)
# Load required libraries
library(ggplot2)
library(fpp2)
library(tseries)
library(forecast)
library(zoo)
library(lmtest)
# Set working directory (ensure this is the directory containing the CSV file)
setwd("C:/Users/ASUS/Downloads")
# Read the data from the CSV file
data <- read.csv("Inflation.csv")
# Create a time series object
ts_data <- ts(data$Inflation.Rate, start = 1991, frequency = 1)
# Display the time series data
ggtsdisplay(ts_data)
autoplot(ts_data)
ggAcf(ts_data)
ggPacf(ts_data)
# Check if the series is stationary
adf_test_result <- adf.test(ts_data)
print(adf_test_result)
# Differencing the time series data if it's not stationary
if(adf_test_result$p.value > 0.05) {
diff_ts_data <- diff(ts_data)
adf_test_result_diff <- adf.test(diff_ts_data)
print(adf_test_result_diff)
# Fit an ARMA model to the differenced time series data
arma_fit <- Arima(diff_ts_data, order = c(2, 0, 2))
ggtsdisplay(diff_ts_data)
} else {
# Fit an ARMA model to the original time series data
arma_fit <- Arima(ts_data, order = c(2, 0, 2))
}
# Summary of the fitted ARMA model
summary(arma_fit)
# Check residuals of the fitted model
checkresiduals(arma_fit)
# Forecasting with the fitted ARMA model
fc_arma <- forecast(arma_fit, h = 10)
print(fc_arma)
plot(fc_arma)
